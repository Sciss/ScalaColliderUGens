WhiteNoise etc. --> mce
special input values: Poll, EnvGen, Klang, ...
output accessors for multi-output ugens, e.g. for Pitch
( default values: work around bug for float-literals )
doc comments
individuation

////////// 03-Jan

for one argument ugens:

   def expand = {
      val _bus = bus.expand
      val _sz_bus = _bus.size
      IIdxSeq.tabulate(_sz_bus_)(i => OutUGen(rate, _bus(i.%(_sz_bus)))
   }

should be simplified to

   def expand = {
      val _bus = bus.expand
      IIdxSeq.tabulate(_bus.size)(i => OutUGen(rate, _bus(i))
   }

this is by the way a bit faster than bus.expand.map( x => OutUGen( rate, x ))

///////

case class Done etc.: add "with ControlRated"
case class DiskIn etc.: extends Expands[] instead of GE[]

val _exp = max( ... ) --> maxInt
; optimierung: bei zwei argumenten einfach math.max nehmen

/////////////////

[OK] <arg rate="ugen"/>
[OK] <rate><arg name=... default=.../></rate>
[OK] <rate><arg name=... rate=.../></rate>
[OK] <doc warnpos="true"/>
[OK] <ugen random="true"/>

///////// missing ugens?
DelayUGens : GrainTap
Filter: Flip

/////

Combination MultiOut + HasDoneFlag (PlayBuf) : 
MultiOutUGen[ R <: Rate ]( ... ) extends UGen with GE[R, UGenIn[ R ]]{
--> benoetigen GE[R, UGenIn[ R ] with HasDoneFlag ]

/////

DemandUGens
FFT_UGens
FFT2_UGens
LFUGens
MachineListening
NoiseUGens
OSCUGens
PanUGens
PhysicalModellingUGens
ReverbUGens
TestUGens
UnpackFFTUGens
