<!-- <ugens revision="2">
    <ugen name="MulAdd" provided="true">
        <rate name="scalar"/>
        <rate name="control"/>
        <rate name="audio"/>
        <rate name="demand"/>
        <arg name="in" rate="ugen">
            <doc>
                input operand
            </doc>
        </arg>
        <arg name="mul" default="1.0">
            <doc>
                multiplier
            </doc>
        </arg>
        <arg name="add" default="0.0">
            <doc>
                addition operand
            </doc>
        </arg>
        <doc>
            <text>
                A UGen that multiplies an input with another signal and then adds a third signal. One usually
                uses the `madd` method instead on the input:
                {{{
                MulAdd(input, mul, add) == input.madd(mul, add) == input * mul + add
                }}}
            </text>
            <see>ugen.BinaryOpUGen</see>
            <see>ugen.Sum3</see>
            <see>ugen.Sum4</see>
        </doc>
    </ugen>
    <ugen name="Sum3" provided="true">
        <rate name="scalar"/>
        <rate name="control"/>
        <rate name="audio"/>
        <rate name="demand"/>
        <arg name="in0">
            <doc>
                first of the three inputs
            </doc>
        </arg>
        <arg name="in1">
            <doc>
                second of the three inputs
            </doc>
        </arg>
        <arg name="in2">
            <doc>
                third of the three inputs
            </doc>
        </arg>
        <doc>
            <text>
                A UGen to efficiently add three signals together.
            </text>
            <see>ugen.BinaryOpUGen</see>
            <see>ugen.MulAdd</see>
            <see>ugen.Sum4</see>
        </doc>
    </ugen>
    <ugen name="Sum4" provided="true">
        <rate name="scalar"/>
        <rate name="control"/>
        <rate name="audio"/>
        <rate name="demand"/>
        <arg name="in0">
            <doc>
                first of the four inputs
            </doc>
        </arg>
        <arg name="in1">
            <doc>
                second of the four inputs
            </doc>
        </arg>
        <arg name="in2">
            <doc>
                third of the four inputs
            </doc>
        </arg>
        <arg name="in3">
            <doc>
                fourth of the four inputs
            </doc>
        </arg>
        <doc>
            <text>
                A UGen to efficiently add four signals together.
            </text>
            <see>ugen.BinaryOpUGen</see>
            <see>ugen.MulAdd</see>
            <see>ugen.Sum3</see>
        </doc>
    </ugen>
</ugens>
-->