<ugens revision="1">
    <ugen name="OffsetOut" writesbus="true">
        <no-outputs/>
        <rate name="audio" implied="true">
            <arg name="in" rate="ugen"/>
        </rate>
        <arg name="bus" type="bus"/>
        <arg name="in" variadic="true"/>
    </ugen>
    <ugen name="LocalIn">
        <output variadic="numChannels"/>
        <rate name="control"/>
        <rate name="audio"/>
        <arg name="numChannels" type="int" default="1"/>
    </ugen>
    <ugen name="XOut" writesbus="true">
        <no-outputs/>
        <rate name="audio">
            <arg name="in" rate="ugen"/>
        </rate>
        <rate name="control"/>
        <arg name="bus" type="bus" pos="0"/>
        <arg name="xfade" pos="2"/>
        <arg name="in" variadic="true" pos="1"/>
        <doc warnpos="true"/>
    </ugen>

    <!-- XXX TODO: these could well be here, and only the ProxyFactories are manually coded...
    <ugen name="LagControl"/>
    <ugen name="AudioControl"/>
    <ugen name="Control"/>
    <ugen name="TrigControl"/>
    -->

    <ugen name="ReplaceOut" writesbus="true">
        <no-outputs/>
        <rate name="audio" implied="true">
            <arg name="in" rate="ugen"/>
        </rate>
        <arg name="bus" type="bus"/>
        <arg name="in" variadic="true"/>
    </ugen>
    <ugen name="Out" writesbus="true">
        <no-outputs/>
        <rate name="audio">
            <arg name="in" rate="ugen"/>
        </rate>
        <rate name="control"/>
        <!-- <rate name="scalar"/> -->
        <arg name="bus" type="bus"/>
        <arg name="in" variadic="true"/>
    </ugen>
    <ugen name="LocalOut">
        <no-outputs/>
        <rate name="control"/>
        <rate name="audio">
            <arg name="in" rate="ugen"/>
        </rate>
        <arg name="in" variadic="true"/>
    </ugen>
    <ugen name="In" readsbus="true">
        <output variadic="numChannels"/>
        <rate name="scalar"/>
        <rate name="control"/>
        <rate name="audio"/>
        <arg name="bus" type="bus"/>
        <arg name="numChannels" type="int" default="1"/>
    </ugen>
    <ugen name="LagIn" readsbus="true">
        <output variadic="numChannels"/>
        <rate name="control"/>
        <arg name="bus" type="bus"/>
        <arg name="numChannels" type="int" default="1"/>
        <arg name="lag" default="0.1"/>
    </ugen>
    <ugen name="InFeedback" readsbus="true">
        <output variadic="numChannels"/>
        <rate name="audio" implied="true"/>
        <arg name="bus" type="bus">
            <doc>
                the index of the audio bus to read in from.
            </doc>
        </arg>
        <arg name="numChannels" type="int" default="1">
            <doc>
                the number of channels (i.e. adjacent buses) to read in. Since
                this is a constant, a change in number of channels of the underlying bus must
                be reflected by creating different SynthDefs.
            </doc>
        </arg>
        <doc>
            <text>
                A UGen which reads a signal from an audio bus with a current or one cycle old timestamp.

                Audio buses adhere to the concept of a cycle timestamp, which increases for each audio block
                calculated. When the various output ugens (`Out`, `OffsetOut`, `XOut`) write data to a bus,
                they mix it with any data from the current cycle, but overwrite any data from the previous cycle.
                (`ReplaceOut` overwrites all data regardless.) Thus depending on node order and what synths are
                writing to the bus, the data on a given bus may be from the current cycle or be one cycle old at
                the time of reading.

                `In.ar` checks the timestamp of any data it reads in and zeros any data from the previous
                cycle (for use within that node; the data remains on the bus). This is fine for audio data,
                as it avoids feedback, but for control data it is useful to be able to read data from any place
                in the node order. For this reason `In.kr` also reads data that is older than the current cycle.

                In some cases one might also want to read audio from a node later in the current node order.
                This can be achieved with `InFeedback`. It reads from the previous cycle, and hence introduces
                a '''delay''' of one block size, which by default is 64 sample frames (equal to about 1.45 ms
                at 44.1 kHz sample rate).

                '''Note''' that no delay occurs when the bus contains a signal which has been written already
                in the current cycle. The delay is only introduced when no present signal exists.
            </text>
            <see>ugen.In</see>
            <see>ugen.LocalIn</see>
            <see>ugen.ControlDur</see>
        </doc>
    </ugen>
    <ugen name="InTrig" readsbus="true">
        <output variadic="numChannels"/>
        <rate name="control" implied="true"/>
        <arg name="bus" type="bus">
            <doc>
                the index of the control bus to read in from.
            </doc>
        </arg>
        <arg name="numChannels" type="int" default="1">
            <doc>
                the number of channels (i.e. adjacent buses) to read in. Since
                this is a constant, a change in number of channels of the underlying bus must
                be reflected by creating different SynthDefs.
            </doc>
        </arg>
        <doc>
            <text>
                A UGen which generates a trigger anytime a control bus is set.

                Any time the bus is "touched" i.e. has its value set (using `"/c_set"` etc.), a single
                impulse trigger will be generated. Its amplitude is the value that the bus was set to.
                Note that if a signal is continuously written to that bus, for instance using
                `Out.kr`, only one initial trigger is generated once that ugen starts writing, but
                no successive triggers are generated.
            </text>
            <see>ugen.In</see>
        </doc>
    </ugen>
    <!-- XXX TODO:
    <ugen name="SharedOut"/>
    <ugen name="SharedIn"/>
    -->
</ugens>